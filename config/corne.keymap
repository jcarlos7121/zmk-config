/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt { tapping-term-ms = <400>; };

/ {
    behaviors {
        escape_q: escape_q {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&kp ESC>;
            mods = <(MOD_RSFT)>; // Needs to be right shift other wise I would not be able to type capital Q
            // keep-mods = <(MOD_LCTL|MOD_LGUI)>;
        };

        control_xz: control_xz {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp X>, <&kp Z>;
            mods = <(MOD_LCTL)>; // Needs to be right shift other wise I would not be able to type capital Q
            // keep-mods = <(MOD_LCTL|MOD_LGUI)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &escape_q     &kp W        &kp E     &kp R      &kp T        &kp Y        &kp U  &kp I      &kp O    &kp P     &none
&none  &mt LCTRL A   &kp S        &kp D     &kp F      &kp G        &mt RSHIFT H &kp J  &kp K      &kp L    &kp SEMI  &none
&none  &mt LSHIFT Z  &control_xz  &kp C     &kp V      &kp B        &kp N        &kp M  &kp COMMA  &kp DOT  &mo 2     &none
                                &kp LGUI  &kp LSHFT  &kp SPACE    &kp RET  &mo 1  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp N1        &kp N2        &kp N3        &kp N4     &kp N5       &kp N6    &kp N7         &kp N8          &kp N9     &kp N0           &none
&none  &mt LCTRL F1  &kp F2        &kp F3        &kp F4     &kp F5       &kp LEFT  &kp DOWN       &kp UP          &kp RIGHT  &kp APOS         &none
&none  &kp LSHFT     &kp C_VOL_DN  &kp C_VOL_UP  &kp PG_DN  &kp PG_UP    &kp BSPC  &kp SEMICOLON  &kp LEFT_BRACE  &kp UNDER  &kp RIGHT_BRACE  &none
                                        &kp LGUI      &trans     &kp SPACE    &kp RET   &trans         &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp TAB    &kp EXCL  &kp DOLLAR &kp HASH      &kp AMPS    &kp UNDER &kp EQUAL  &kp LPAR         &kp RPAR          &kp APOS &none
&none  &kp LCTRL  &kp A     &kp AT     &kp KP_DIVIDE &kp PERCENT &kp MINUS &kp PLUS   &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp STAR &none
&none  &trans     &trans    &trans     &trans        &trans      &kp BSLH  &kp COLON  &kp PIPE         &kp QMARK         &kp PIPE &none
                               &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };
    };
};
